2025-03-15 17:08:13 - Fetching config from server at : http://localhost:8888
2025-03-15 17:08:13 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:08:13 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:08:13 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:08:13 - Fetching config from server at : http://localhost:9999
2025-03-15 17:08:13 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:08:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:08:15 - Finished Spring Data repository scanning in 160 ms. Found 1 JPA repository interface.
2025-03-15 17:08:15 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:08:16 - Tomcat initialized with port 8084 (http)
2025-03-15 17:08:16 - Starting service [Tomcat]
2025-03-15 17:08:16 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:08:16 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:08:16 - Root WebApplicationContext: initialization completed in 3069 ms
2025-03-15 17:08:17 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:08:17 - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-03-15 17:08:17 - HHH000026: Second-level cache disabled
2025-03-15 17:08:17 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:08:17 - HikariPool-1 - Starting...
2025-03-15 17:08:18 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@12c7fa5d
2025-03-15 17:08:18 - HikariPool-1 - Start completed.
2025-03-15 17:08:18 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:08:19 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:08:19 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:08:20 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:08:20 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:08:21 - Unable to start LiveReload server
2025-03-15 17:08:21 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:08:23 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:08:24 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:08:24 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:08:24 - Setting initial instance status as: STARTING
2025-03-15 17:08:24 - Initializing Eureka in region us-east-1
2025-03-15 17:08:24 - Resolving eureka endpoints via configuration
2025-03-15 17:08:24 - Disable delta property : false
2025-03-15 17:08:24 - Single vip registry refresh property : null
2025-03-15 17:08:24 - Force full registry fetch : false
2025-03-15 17:08:24 - Application is null : false
2025-03-15 17:08:24 - Registered Applications size is zero : true
2025-03-15 17:08:24 - Application version is -1: true
2025-03-15 17:08:24 - Getting all instance registry info from the eureka server
2025-03-15 17:08:24 - The response status is 200
2025-03-15 17:08:24 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:08:24 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:08:24 - Discovery Client initialized at timestamp 1742038704517 with initial instances count: 1
2025-03-15 17:08:24 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:08:24 - Saw local status change event StatusChangeEvent [timestamp=1742038704538, current=UP, previous=STARTING]
2025-03-15 17:08:24 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:08:24 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:08:24 - Updating port to 8084
2025-03-15 17:08:24 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:08:24 - Started EmployeeApplication in 13.461 seconds (process running for 14.373)
2025-03-15 17:08:25 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-15 17:08:25 - Initializing Servlet 'dispatcherServlet'
2025-03-15 17:08:25 - Completed initialization in 2 ms
2025-03-15 17:12:33 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:33 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:33 - FallBack executed , department service is down
2025-03-15 17:12:37 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:37 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:39 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:39 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:40 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:40 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:41 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:41 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:41 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:41 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:45 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:45 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:46 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:46 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:48 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:48 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:49 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:49 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:50 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:50 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:12:52 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:12:52 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:13:24 - Resolving eureka endpoints via configuration
2025-03-15 17:15:24 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:15:24 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:15:24 - FallBack executed , department service is down
2025-03-15 17:15:25 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:15:25 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:15:25 - FallBack executed , department service is down
2025-03-15 17:15:36 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:15:36 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:15:36 - FallBack executed , department service is down
2025-03-15 17:16:45 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:16:45 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:16:45 - FallBack executed , department service is down
2025-03-15 17:17:04 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:17:04 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:17:04 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:17:04 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:17:05 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:17:05 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:18:24 - Resolving eureka endpoints via configuration
2025-03-15 17:23:24 - Resolving eureka endpoints via configuration
2025-03-15 17:24:01 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-15 17:24:01 - Unregistering application EMPLOYEE-INFO with eureka with status DOWN
2025-03-15 17:24:01 - Saw local status change event StatusChangeEvent [timestamp=1742039641686, current=DOWN, previous=UP]
2025-03-15 17:24:01 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:24:01 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-15 17:24:01 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:24:01 - Graceful shutdown complete
2025-03-15 17:24:01 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:24:01 - HikariPool-1 - Shutdown initiated...
2025-03-15 17:24:02 - HikariPool-1 - Shutdown completed.
2025-03-15 17:24:02 - Shutting down DiscoveryClient ...
2025-03-15 17:24:05 - Unregistering ...
2025-03-15 17:24:05 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - deregister  status: 200
2025-03-15 17:24:05 - Completed shut down of DiscoveryClient
2025-03-15 17:24:05 - Stopping service [Tomcat]
2025-03-15 17:24:05 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-03-15 17:24:05 - The web application [ROOT] appears to have started a thread named [boundedElastic-evictor-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:842)
2025-03-15 17:24:05 - The web application [ROOT] appears to have started a thread named [pool-6-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.12/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.12/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.12/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
 java.base@17.0.12/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
 java.base@17.0.12/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.12/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.12/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.12/java.lang.Thread.run(Thread.java:842)
2025-03-15 17:24:06 - Fetching config from server at : http://localhost:8888
2025-03-15 17:24:06 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:24:06 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:24:06 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:24:06 - Fetching config from server at : http://localhost:9999
2025-03-15 17:24:06 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:24:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:24:06 - Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.
2025-03-15 17:24:06 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:24:07 - Tomcat initialized with port 8084 (http)
2025-03-15 17:24:07 - Starting service [Tomcat]
2025-03-15 17:24:07 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:24:07 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:24:07 - Root WebApplicationContext: initialization completed in 928 ms
2025-03-15 17:24:07 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:24:07 - HHH000026: Second-level cache disabled
2025-03-15 17:24:07 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:24:07 - HikariPool-2 - Starting...
2025-03-15 17:24:07 - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@4bf952bc
2025-03-15 17:24:07 - HikariPool-2 - Start completed.
2025-03-15 17:24:08 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:24:08 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:24:08 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:24:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:24:08 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:24:08 - Unable to start LiveReload server
2025-03-15 17:24:08 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:24:10 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:24:11 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:24:11 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:24:11 - Setting initial instance status as: STARTING
2025-03-15 17:24:11 - Initializing Eureka in region us-east-1
2025-03-15 17:24:11 - Resolving eureka endpoints via configuration
2025-03-15 17:24:11 - Disable delta property : false
2025-03-15 17:24:11 - Single vip registry refresh property : null
2025-03-15 17:24:11 - Force full registry fetch : false
2025-03-15 17:24:11 - Application is null : false
2025-03-15 17:24:11 - Registered Applications size is zero : true
2025-03-15 17:24:11 - Application version is -1: true
2025-03-15 17:24:11 - Getting all instance registry info from the eureka server
2025-03-15 17:24:11 - The response status is 200
2025-03-15 17:24:11 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:24:11 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:24:11 - Discovery Client initialized at timestamp 1742039651358 with initial instances count: 3
2025-03-15 17:24:11 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:24:11 - Saw local status change event StatusChangeEvent [timestamp=1742039651385, current=UP, previous=STARTING]
2025-03-15 17:24:11 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:24:11 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:24:11 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:24:11 - Updating port to 8084
2025-03-15 17:24:11 - Started EmployeeApplication in 6.301 seconds (process running for 961.236)
2025-03-15 17:24:11 - Condition evaluation unchanged
2025-03-15 17:24:12 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-15 17:24:12 - Unregistering application EMPLOYEE-INFO with eureka with status DOWN
2025-03-15 17:24:12 - Saw local status change event StatusChangeEvent [timestamp=1742039652429, current=DOWN, previous=UP]
2025-03-15 17:24:12 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:24:12 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-15 17:24:12 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:24:12 - Graceful shutdown complete
2025-03-15 17:24:12 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:24:12 - HikariPool-2 - Shutdown initiated...
2025-03-15 17:24:12 - HikariPool-2 - Shutdown completed.
2025-03-15 17:24:12 - Shutting down DiscoveryClient ...
2025-03-15 17:24:15 - Unregistering ...
2025-03-15 17:24:15 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - deregister  status: 200
2025-03-15 17:24:15 - Completed shut down of DiscoveryClient
2025-03-15 17:24:15 - Stopping service [Tomcat]
2025-03-15 17:24:17 - Fetching config from server at : http://localhost:8888
2025-03-15 17:24:17 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:24:17 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:24:17 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:24:17 - Fetching config from server at : http://localhost:9999
2025-03-15 17:24:17 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:24:17 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:24:17 - Finished Spring Data repository scanning in 12 ms. Found 1 JPA repository interface.
2025-03-15 17:24:17 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:24:17 - Tomcat initialized with port 8084 (http)
2025-03-15 17:24:17 - Starting service [Tomcat]
2025-03-15 17:24:17 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:24:17 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:24:17 - Root WebApplicationContext: initialization completed in 931 ms
2025-03-15 17:24:18 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:24:18 - HHH000026: Second-level cache disabled
2025-03-15 17:24:18 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:24:18 - HikariPool-3 - Starting...
2025-03-15 17:24:18 - HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@457b5168
2025-03-15 17:24:18 - HikariPool-3 - Start completed.
2025-03-15 17:24:18 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:24:18 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:24:18 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:24:18 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:24:19 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:24:19 - Unable to start LiveReload server
2025-03-15 17:24:19 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:24:21 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:24:21 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:24:21 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:24:21 - Setting initial instance status as: STARTING
2025-03-15 17:24:21 - Initializing Eureka in region us-east-1
2025-03-15 17:24:21 - Resolving eureka endpoints via configuration
2025-03-15 17:24:21 - Disable delta property : false
2025-03-15 17:24:21 - Single vip registry refresh property : null
2025-03-15 17:24:21 - Force full registry fetch : false
2025-03-15 17:24:21 - Application is null : false
2025-03-15 17:24:21 - Registered Applications size is zero : true
2025-03-15 17:24:21 - Application version is -1: true
2025-03-15 17:24:21 - Getting all instance registry info from the eureka server
2025-03-15 17:24:21 - The response status is 200
2025-03-15 17:24:21 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:24:21 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:24:21 - Discovery Client initialized at timestamp 1742039661787 with initial instances count: 3
2025-03-15 17:24:21 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:24:21 - Saw local status change event StatusChangeEvent [timestamp=1742039661808, current=UP, previous=STARTING]
2025-03-15 17:24:21 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:24:21 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:24:21 - Updating port to 8084
2025-03-15 17:24:21 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:24:21 - Started EmployeeApplication in 5.986 seconds (process running for 971.622)
2025-03-15 17:24:21 - Condition evaluation unchanged
2025-03-15 17:25:01 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-15 17:25:01 - Unregistering application EMPLOYEE-INFO with eureka with status DOWN
2025-03-15 17:25:01 - Saw local status change event StatusChangeEvent [timestamp=1742039701633, current=DOWN, previous=UP]
2025-03-15 17:25:01 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:25:01 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-15 17:25:01 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:25:01 - Graceful shutdown complete
2025-03-15 17:25:01 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:25:01 - HikariPool-3 - Shutdown initiated...
2025-03-15 17:25:02 - HikariPool-3 - Shutdown completed.
2025-03-15 17:25:02 - Shutting down DiscoveryClient ...
2025-03-15 17:25:05 - Unregistering ...
2025-03-15 17:25:05 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - deregister  status: 200
2025-03-15 17:25:05 - Completed shut down of DiscoveryClient
2025-03-15 17:25:05 - Stopping service [Tomcat]
2025-03-15 17:25:06 - Fetching config from server at : http://localhost:8888
2025-03-15 17:25:06 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:25:06 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:25:06 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:25:06 - Fetching config from server at : http://localhost:9999
2025-03-15 17:25:06 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:25:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:25:06 - Finished Spring Data repository scanning in 9 ms. Found 1 JPA repository interface.
2025-03-15 17:25:07 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:25:07 - Tomcat initialized with port 8084 (http)
2025-03-15 17:25:07 - Starting service [Tomcat]
2025-03-15 17:25:07 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:25:07 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:25:07 - Root WebApplicationContext: initialization completed in 893 ms
2025-03-15 17:25:07 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:25:07 - HHH000026: Second-level cache disabled
2025-03-15 17:25:07 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:25:07 - HikariPool-4 - Starting...
2025-03-15 17:25:08 - HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@70148227
2025-03-15 17:25:08 - HikariPool-4 - Start completed.
2025-03-15 17:25:08 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:25:08 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:25:08 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:25:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:25:09 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:25:09 - Unable to start LiveReload server
2025-03-15 17:25:09 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:25:11 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:25:11 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:25:11 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:25:12 - Setting initial instance status as: STARTING
2025-03-15 17:25:12 - Initializing Eureka in region us-east-1
2025-03-15 17:25:12 - Resolving eureka endpoints via configuration
2025-03-15 17:25:12 - Disable delta property : false
2025-03-15 17:25:12 - Single vip registry refresh property : null
2025-03-15 17:25:12 - Force full registry fetch : false
2025-03-15 17:25:12 - Application is null : false
2025-03-15 17:25:12 - Registered Applications size is zero : true
2025-03-15 17:25:12 - Application version is -1: true
2025-03-15 17:25:12 - Getting all instance registry info from the eureka server
2025-03-15 17:25:12 - The response status is 200
2025-03-15 17:25:12 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:25:12 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:25:12 - Discovery Client initialized at timestamp 1742039712114 with initial instances count: 3
2025-03-15 17:25:12 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:25:12 - Saw local status change event StatusChangeEvent [timestamp=1742039712135, current=UP, previous=STARTING]
2025-03-15 17:25:12 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:25:12 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:25:12 - Updating port to 8084
2025-03-15 17:25:12 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:25:12 - Started EmployeeApplication in 7.112 seconds (process running for 1021.946)
2025-03-15 17:25:12 - Condition evaluation unchanged
2025-03-15 17:25:13 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-15 17:25:13 - Unregistering application EMPLOYEE-INFO with eureka with status DOWN
2025-03-15 17:25:13 - Saw local status change event StatusChangeEvent [timestamp=1742039713138, current=DOWN, previous=UP]
2025-03-15 17:25:13 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:25:13 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-15 17:25:13 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:25:13 - Graceful shutdown complete
2025-03-15 17:25:13 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:25:13 - HikariPool-4 - Shutdown initiated...
2025-03-15 17:25:13 - HikariPool-4 - Shutdown completed.
2025-03-15 17:25:13 - Shutting down DiscoveryClient ...
2025-03-15 17:25:16 - Unregistering ...
2025-03-15 17:25:16 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - deregister  status: 200
2025-03-15 17:25:16 - Completed shut down of DiscoveryClient
2025-03-15 17:25:16 - Stopping service [Tomcat]
2025-03-15 17:25:17 - Fetching config from server at : http://localhost:8888
2025-03-15 17:25:17 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:25:17 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:25:17 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:25:17 - Fetching config from server at : http://localhost:9999
2025-03-15 17:25:17 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:25:18 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:25:18 - Finished Spring Data repository scanning in 14 ms. Found 1 JPA repository interface.
2025-03-15 17:25:18 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:25:18 - Tomcat initialized with port 8084 (http)
2025-03-15 17:25:18 - Starting service [Tomcat]
2025-03-15 17:25:18 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:25:18 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:25:18 - Root WebApplicationContext: initialization completed in 1041 ms
2025-03-15 17:25:19 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:25:19 - HHH000026: Second-level cache disabled
2025-03-15 17:25:19 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:25:19 - HikariPool-5 - Starting...
2025-03-15 17:25:19 - HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@99ea43
2025-03-15 17:25:19 - HikariPool-5 - Start completed.
2025-03-15 17:25:19 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:25:19 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:25:19 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:25:19 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:25:20 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:25:20 - Unable to start LiveReload server
2025-03-15 17:25:20 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:25:22 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:25:22 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:25:22 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:25:22 - Setting initial instance status as: STARTING
2025-03-15 17:25:22 - Initializing Eureka in region us-east-1
2025-03-15 17:25:22 - Resolving eureka endpoints via configuration
2025-03-15 17:25:22 - Disable delta property : false
2025-03-15 17:25:22 - Single vip registry refresh property : null
2025-03-15 17:25:22 - Force full registry fetch : false
2025-03-15 17:25:22 - Application is null : false
2025-03-15 17:25:22 - Registered Applications size is zero : true
2025-03-15 17:25:22 - Application version is -1: true
2025-03-15 17:25:22 - Getting all instance registry info from the eureka server
2025-03-15 17:25:22 - The response status is 200
2025-03-15 17:25:22 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:25:22 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:25:22 - Discovery Client initialized at timestamp 1742039722860 with initial instances count: 3
2025-03-15 17:25:22 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:25:22 - Saw local status change event StatusChangeEvent [timestamp=1742039722880, current=UP, previous=STARTING]
2025-03-15 17:25:22 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:25:22 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:25:22 - Updating port to 8084
2025-03-15 17:25:22 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:25:23 - Started EmployeeApplication in 6.368 seconds (process running for 1032.694)
2025-03-15 17:25:23 - Condition evaluation unchanged
2025-03-15 17:25:25 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-15 17:25:25 - Unregistering application EMPLOYEE-INFO with eureka with status DOWN
2025-03-15 17:25:25 - Saw local status change event StatusChangeEvent [timestamp=1742039725354, current=DOWN, previous=UP]
2025-03-15 17:25:25 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:25:25 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-15 17:25:25 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:25:25 - Graceful shutdown complete
2025-03-15 17:25:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:25:25 - HikariPool-5 - Shutdown initiated...
2025-03-15 17:25:25 - HikariPool-5 - Shutdown completed.
2025-03-15 17:25:25 - Shutting down DiscoveryClient ...
2025-03-15 17:25:28 - Unregistering ...
2025-03-15 17:25:28 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - deregister  status: 200
2025-03-15 17:25:28 - Completed shut down of DiscoveryClient
2025-03-15 17:25:28 - Stopping service [Tomcat]
2025-03-15 17:25:30 - Fetching config from server at : http://localhost:8888
2025-03-15 17:25:30 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:25:30 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:25:30 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:25:30 - Fetching config from server at : http://localhost:9999
2025-03-15 17:25:30 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:25:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:25:30 - Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.
2025-03-15 17:25:30 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:25:31 - Tomcat initialized with port 8084 (http)
2025-03-15 17:25:31 - Starting service [Tomcat]
2025-03-15 17:25:31 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:25:31 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:25:31 - Root WebApplicationContext: initialization completed in 963 ms
2025-03-15 17:25:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:25:31 - HHH000026: Second-level cache disabled
2025-03-15 17:25:31 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:25:31 - HikariPool-6 - Starting...
2025-03-15 17:25:31 - HikariPool-6 - Added connection org.postgresql.jdbc.PgConnection@6c9ea5ff
2025-03-15 17:25:31 - HikariPool-6 - Start completed.
2025-03-15 17:25:31 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:25:31 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:25:32 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:25:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:25:32 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:25:32 - Unable to start LiveReload server
2025-03-15 17:25:32 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:25:34 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:25:35 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:25:35 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:25:35 - Setting initial instance status as: STARTING
2025-03-15 17:25:35 - Initializing Eureka in region us-east-1
2025-03-15 17:25:35 - Resolving eureka endpoints via configuration
2025-03-15 17:25:35 - Disable delta property : false
2025-03-15 17:25:35 - Single vip registry refresh property : null
2025-03-15 17:25:35 - Force full registry fetch : false
2025-03-15 17:25:35 - Application is null : false
2025-03-15 17:25:35 - Registered Applications size is zero : true
2025-03-15 17:25:35 - Application version is -1: true
2025-03-15 17:25:35 - Getting all instance registry info from the eureka server
2025-03-15 17:25:35 - The response status is 200
2025-03-15 17:25:35 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:25:35 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:25:35 - Discovery Client initialized at timestamp 1742039735220 with initial instances count: 2
2025-03-15 17:25:35 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:25:35 - Saw local status change event StatusChangeEvent [timestamp=1742039735240, current=UP, previous=STARTING]
2025-03-15 17:25:35 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:25:35 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:25:35 - Updating port to 8084
2025-03-15 17:25:35 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:25:35 - Started EmployeeApplication in 6.518 seconds (process running for 1045.07)
2025-03-15 17:25:35 - Condition evaluation unchanged
2025-03-15 17:27:31 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-15 17:27:31 - Unregistering application EMPLOYEE-INFO with eureka with status DOWN
2025-03-15 17:27:31 - Saw local status change event StatusChangeEvent [timestamp=1742039851879, current=DOWN, previous=UP]
2025-03-15 17:27:31 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:27:31 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-15 17:27:31 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:27:31 - Graceful shutdown complete
2025-03-15 17:27:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:27:31 - HikariPool-6 - Shutdown initiated...
2025-03-15 17:27:32 - HikariPool-6 - Shutdown completed.
2025-03-15 17:27:32 - Shutting down DiscoveryClient ...
2025-03-15 17:27:35 - Unregistering ...
2025-03-15 17:27:35 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - deregister  status: 200
2025-03-15 17:27:35 - Completed shut down of DiscoveryClient
2025-03-15 17:27:35 - Stopping service [Tomcat]
2025-03-15 17:29:54 - Fetching config from server at : http://localhost:8888
2025-03-15 17:29:54 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:29:54 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:29:54 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:29:54 - Fetching config from server at : http://localhost:9999
2025-03-15 17:29:54 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:29:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:29:54 - Finished Spring Data repository scanning in 8 ms. Found 1 JPA repository interface.
2025-03-15 17:29:54 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:29:54 - Tomcat initialized with port 8084 (http)
2025-03-15 17:29:54 - Starting service [Tomcat]
2025-03-15 17:29:54 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:29:54 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:29:54 - Root WebApplicationContext: initialization completed in 873 ms
2025-03-15 17:29:55 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:29:55 - HHH000026: Second-level cache disabled
2025-03-15 17:29:55 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:29:55 - HikariPool-7 - Starting...
2025-03-15 17:29:55 - HikariPool-7 - Added connection org.postgresql.jdbc.PgConnection@2267204e
2025-03-15 17:29:55 - HikariPool-7 - Start completed.
2025-03-15 17:29:55 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:29:55 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-7)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:29:55 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:29:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:29:56 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:29:56 - Unable to start LiveReload server
2025-03-15 17:29:56 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:29:57 - Application shutdown requested.
2025-03-15 17:29:58 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:29:58 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:29:58 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:29:58 - Setting initial instance status as: STARTING
2025-03-15 17:29:58 - Initializing Eureka in region us-east-1
2025-03-15 17:29:58 - Resolving eureka endpoints via configuration
2025-03-15 17:29:58 - Disable delta property : false
2025-03-15 17:29:58 - Single vip registry refresh property : null
2025-03-15 17:29:58 - Force full registry fetch : false
2025-03-15 17:29:58 - Application is null : false
2025-03-15 17:29:58 - Registered Applications size is zero : true
2025-03-15 17:29:58 - Application version is -1: true
2025-03-15 17:29:58 - Getting all instance registry info from the eureka server
2025-03-15 17:29:58 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:162)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:410)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:375)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:372)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:510)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:295)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:240)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.tekworks.microservice.EmployeeApplication.main(EmployeeApplication.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 73 more

2025-03-15 17:29:58 - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-03-15 17:29:58 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:410)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:375)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:372)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:510)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:295)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:240)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.tekworks.microservice.EmployeeApplication.main(EmployeeApplication.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)

2025-03-15 17:29:58 - Initial registry fetch from primary servers failed
2025-03-15 17:29:58 - Using default backup registry implementation which does not do anything.
2025-03-15 17:29:58 - Initial registry fetch from backup servers failed
2025-03-15 17:29:58 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:29:58 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:29:58 - Discovery Client initialized at timestamp 1742039998666 with initial instances count: 0
2025-03-15 17:29:58 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:29:58 - Saw local status change event StatusChangeEvent [timestamp=1742039998683, current=UP, previous=STARTING]
2025-03-15 17:29:58 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:29:58 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:29:58 - Updating port to 8084
2025-03-15 17:29:58 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 22 more

2025-03-15 17:29:58 - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-03-15 17:29:58 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
2025-03-15 17:29:58 - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
2025-03-15 17:29:58 - Started EmployeeApplication in 5.899 seconds (process running for 1308.482)
2025-03-15 17:29:58 - Unregistering application EMPLOYEE-INFO with eureka with status DOWN
2025-03-15 17:29:58 - Saw local status change event StatusChangeEvent [timestamp=1742039998794, current=DOWN, previous=UP]
2025-03-15 17:29:58 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:29:58 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-15 17:29:58 - Condition evaluation unchanged
2025-03-15 17:29:58 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 22 more

2025-03-15 17:29:58 - Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-03-15 17:29:58 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
2025-03-15 17:29:58 - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
2025-03-15 17:29:58 - Graceful shutdown complete
2025-03-15 17:29:58 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:29:58 - HikariPool-7 - Shutdown initiated...
2025-03-15 17:29:59 - HikariPool-7 - Shutdown completed.
2025-03-15 17:29:59 - Shutting down DiscoveryClient ...
2025-03-15 17:30:02 - Unregistering ...
2025-03-15 17:30:02 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:686)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:643)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1368)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:602)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1361)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at jdk.internal.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 75 more

2025-03-15 17:30:02 - Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-03-15 17:30:02 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.2.0.jar:4.2.0]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.2.0.jar:4.2.0]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:686) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:643) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1368) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:602) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1361) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219) ~[spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180) ~[spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126) ~[spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160) ~[spring-boot-3.4.2.jar:3.4.2]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72) ~[na:na]
	at jdk.internal.reflect.GeneratedMethodAccessor108.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252) ~[na:na]
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829) ~[na:na]
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:na]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705) ~[na:na]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
2025-03-15 17:30:02 - Completed shut down of DiscoveryClient
2025-03-15 17:30:02 - Stopping service [Tomcat]
2025-03-15 17:30:44 - Fetching config from server at : http://localhost:8888
2025-03-15 17:30:44 - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information. Will be trying the next url if available
2025-03-15 17:30:44 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/employee-info/default": Connection refused: no further information
2025-03-15 17:30:44 - No active profile set, falling back to 1 default profile: "default"
2025-03-15 17:30:44 - Fetching config from server at : http://localhost:9999
2025-03-15 17:30:44 - Located environment: name=employee-info, profiles=[default], label=null, version=fdfef869fb4f8020aee71737d39fed93c58e1ff1, state=
2025-03-15 17:30:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-15 17:30:45 - Finished Spring Data repository scanning in 158 ms. Found 1 JPA repository interface.
2025-03-15 17:30:45 - BeanFactory id=5c7e782b-59c6-3d28-99d2-88c803c1eb7d
2025-03-15 17:30:46 - Tomcat initialized with port 8084 (http)
2025-03-15 17:30:46 - Starting service [Tomcat]
2025-03-15 17:30:46 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-15 17:30:46 - Initializing Spring embedded WebApplicationContext
2025-03-15 17:30:46 - Root WebApplicationContext: initialization completed in 2721 ms
2025-03-15 17:30:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-15 17:30:47 - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-03-15 17:30:47 - HHH000026: Second-level cache disabled
2025-03-15 17:30:48 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-15 17:30:48 - HikariPool-1 - Starting...
2025-03-15 17:30:48 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@703e37f1
2025-03-15 17:30:48 - HikariPool-1 - Start completed.
2025-03-15 17:30:48 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-15 17:30:48 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.8
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-15 17:30:50 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-15 17:30:50 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-15 17:30:50 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-15 17:30:51 - Unable to start LiveReload server
2025-03-15 17:30:51 - For 'DEPARTMENT-INFO' URL not provided. Will try picking an instance via load-balancing.
2025-03-15 17:30:55 - Eureka HTTP Client uses RestTemplate.
2025-03-15 17:30:55 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-15 17:30:55 - Exposing 1 endpoint beneath base path '/actuator'
2025-03-15 17:30:55 - Setting initial instance status as: STARTING
2025-03-15 17:30:55 - Initializing Eureka in region us-east-1
2025-03-15 17:30:55 - Resolving eureka endpoints via configuration
2025-03-15 17:30:55 - Disable delta property : false
2025-03-15 17:30:55 - Single vip registry refresh property : null
2025-03-15 17:30:55 - Force full registry fetch : false
2025-03-15 17:30:55 - Application is null : false
2025-03-15 17:30:55 - Registered Applications size is zero : true
2025-03-15 17:30:55 - Application version is -1: true
2025-03-15 17:30:55 - Getting all instance registry info from the eureka server
2025-03-15 17:30:55 - The response status is 200
2025-03-15 17:30:55 - Starting heartbeat executor: renew interval is: 30
2025-03-15 17:30:55 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-15 17:30:55 - Discovery Client initialized at timestamp 1742040055816 with initial instances count: 0
2025-03-15 17:30:55 - Registering application EMPLOYEE-INFO with eureka with status UP
2025-03-15 17:30:55 - Saw local status change event StatusChangeEvent [timestamp=1742040055848, current=UP, previous=STARTING]
2025-03-15 17:30:55 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084: registering service...
2025-03-15 17:30:55 - Tomcat started on port 8084 (http) with context path '/'
2025-03-15 17:30:55 - Updating port to 8084
2025-03-15 17:30:55 - DiscoveryClient_EMPLOYEE-INFO/SYMPLT1017.lan:employee-info:8084 - registration status: 204
2025-03-15 17:30:56 - Started EmployeeApplication in 14.373 seconds (process running for 15.329)
2025-03-15 17:30:56 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-15 17:30:56 - Initializing Servlet 'dispatcherServlet'
2025-03-15 17:30:56 - Completed initialization in 4 ms
2025-03-15 17:31:25 - Disable delta property : false
2025-03-15 17:31:25 - Single vip registry refresh property : null
2025-03-15 17:31:25 - Force full registry fetch : false
2025-03-15 17:31:25 - Application is null : false
2025-03-15 17:31:25 - Registered Applications size is zero : true
2025-03-15 17:31:25 - Application version is -1: false
2025-03-15 17:31:25 - Getting all instance registry info from the eureka server
2025-03-15 17:31:25 - The response status is 200
2025-03-15 17:31:29 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:31:29 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:31:34 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:31:34 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:32:32 - Retry COunt: 1
2025-03-15 17:33:02 - Retry COunt: 2
2025-03-15 17:33:10 - Retry COunt: 3
2025-03-15 17:33:17 - Retry COunt: 4
2025-03-15 17:33:19 - FallBack executed , department service is down
2025-03-15 17:33:19 - Retry COunt: 5
2025-03-15 17:33:25 - Retry COunt: 6
2025-03-15 17:33:27 - Retry COunt: 7
2025-03-15 17:33:27 - Retry COunt: 8
2025-03-15 17:33:32 - Retry COunt: 9
2025-03-15 17:33:34 - Retry COunt: 10
2025-03-15 17:33:35 - Retry COunt: 11
2025-03-15 17:33:36 - FallBack executed , department service is down
2025-03-15 17:33:39 - Retry COunt: 12
2025-03-15 17:33:39 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:33:39 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:33:39 - FallBack executed , department service is down
2025-03-15 17:33:42 - Retry COunt: 13
2025-03-15 17:33:42 - No servers available for service: DEPARTMENT-INFO
2025-03-15 17:33:42 - Load balancer does not contain an instance for the service DEPARTMENT-INFO
2025-03-15 17:33:42 - FallBack executed , department service is down
